@model IEnumerable<IndexAccountViewModel>
@{
    ViewData["Title"] = "Cuentas";

    string FormatBalance(decimal balance)
    {
        return Math.Abs(balance).ToString("N");
    }

    string GetBalanceClass(decimal balance)
    {
        return balance >= 0 ? "activo" : "pasivo";
    }
}

<h1>Cuentas</h1>

<a asp-action="Create" class="btn btn-success mb-3">
    <i class="bi bi-plus-circle me-2"></i> Crear nueva cuenta
</a>

<div class="row text-center mb-4">
    <div class="col-md-4">
        <div class="card border-primary shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Activos</h5>
                <p class="card-text text-primary fw-bold fs-4">
                    @FormatBalance(Model.Where(x => x.Balance > 0).Sum(x => x.Balance))
                </p>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card border-danger shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Pasivos</h5>
                <p class="card-text text-danger fw-bold fs-4">
                    @FormatBalance(Model.Where(x => x.Balance < 0).Sum(x => x.Balance))
                </p>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card border-dark shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Total</h5>
                <p class="card-text fw-bold fs-4">
                    @FormatBalance(Model.Sum(x => x.Balance))
                </p>
            </div>
        </div>
    </div>
</div>

<div class="accordion accordion-accounts">
    @foreach(var accountT in Model)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="firstHeader">
                @{
                    var id = accountT.AccountType.Replace(" ", "");
                    var dataBSTarget = "#" + id;
                    var classAccountType = GetBalanceClass(accountT.Balance);
                }
                <button class="accordion-button"
                type="button"
                data-bs-toggle="collapse"
                data-bs-target="@dataBSTarget">
                    <span class="me-3">
                        <span><strong>@accountT.AccountType</strong></span>
                        <span class="@classAccountType">@FormatBalance(accountT.Balance)</span>
                    </span>
                </button>
            </h2>
            <div id="@id" class="accordion-collapse collapse show">
                <div>
                    <ul class="list-group">
                        @foreach(var account in accountT.Accounts)
                        {
                            var accClass = GetBalanceClass(account.Balance);
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <strong>@account.AccountName</strong>
                                </div>
                                <div class="btn-group btn-group-sm">
                                    <a asp-action="Edit" asp-route-id="@account.Id" class="btn btn-outline-primary" title="Editar">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@account.Id" class="btn btn-outline-danger" title="Eliminar">
                                        <i class="bi bi-trash"></i>
                                    </a>
                                </div>
                                <span class="badge @(accClass == "activo" ? "bg-success" : "bg-danger")">
                                    @FormatBalance(account.Balance)
                                </span>

                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>